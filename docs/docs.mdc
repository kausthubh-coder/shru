# Docs Verification Checklist

Last verified: 2025-10-19

This file maps each doc in `docs/` to concrete code paths it describes. Update both the doc and this checklist together.

## Index
- architecture.md — app layers and data flow (Next.js, Convex, Realtime)
- convex.md — schema, functions, HTTP routes, env vars
- realtime-agent.md — session wiring, tools, auto-context, audio
- ide.md — IDE UI and execution (Pyodide)
- notes.md — YAML schema and tools
- test-app.md — prototype usage and controls
- troubleshooting.md — issues and remedies

## architecture.md → code
- UI
  - `app/test-app/page.tsx` — prototype UI and agent wiring
  - `app/test-app/components/*` — panel, overlays, notes
  - `app/test-app/agent/{session,runtime,registry}.ts`
  - `app/test-app/agent/tools/*` (whiteboard/ide/notes)
  - `app/test-app/services/context/index.ts` (preferred combined sender)
  - `app/test-app/services/autoContext.ts` (legacy fallback)
- Backend
  - `convex/http.ts` — `OPTIONS|GET /realtime/token`
  - `convex/realtime.ts` — `internal.realtime.mintClientSecret`
- tldraw v4.0.2
  - Geo labels are not set inline; `agent_label` creates a separate text shape
  - Unsupported geo names normalized; allowed list in `agent/tools/whiteboard.ts`

## convex.md → code
- Endpoints: `convex/http.ts` CORS + `GET /realtime/token`
- Internal action: `convex/realtime.ts` (defaults: model `gpt-realtime`, voice `marin`)
- Env vars: `OPENAI_API_KEY`, `CLIENT_ORIGIN`, `NEXT_PUBLIC_CONVEX_SITE_URL`, `NEXT_PUBLIC_CONVEX_URL`
- Client fetch logic aligns with `app/test-app/page.tsx` (`fetchEphemeralToken`)

## realtime-agent.md → code
- Session connect via `app/test-app/agent/session.ts`
- Gating: wait for `session.updated` before first response (`page.tsx`)
- Auto-context: unified `workspace_context` (whiteboard + IDE + notes) via `services/context/index.ts` (debounce ~120ms, dedup ~300ms); fallback `services/autoContext.ts`
- Tools registry: `app/test-app/agent/registry.ts`; tools in `agent/tools/*`
- Approvals: `agent_clear` emits approval request and returns `approval_required`
- Audio defaults: model `gpt-realtime`, input `audio/pcm@24000` (semantic VAD create_response=false), output `audio/pcm`, voice `marin`
- Text shape schema (v4): `type: 'text'` requires `props.richText` (via `toRichText(...)`). The app maps plain `text` → `richText` when creating shapes. Avoid `props.text` or `props.label` on text shapes.
 - Whiteboard: includes `agent_get_text_context` to surface visible text items in the viewport

## ide.md → code
- Run is Python-only via Pyodide: `app/test-app/lib/pyodide.ts` (`loadPyodideOnce`)
- Agent tools: `ide_read_code`, `ide_apply_edits`, `ide_run_active`, `ide_get_context`
- UI: editor + output panel in Code tab (`page.tsx`)

## notes.md → code
- Zod schema: `app/test-app/types/notesYaml.ts`
  - Interactive blocks (`quiz|input|embed`) require unique `id`
  - Providers: `codepen|stackblitz|jsfiddle`; `height` range enforced
- Tools: `notes_set_yaml`, `notes_append_block_yaml`; legacy `notes_set_text`, `notes_append`
- New tool: `notes_read_file(name?)` — reads `{ name, content }` from IDE workspace without mutating state
- Components: `NotesEditor`, `NotesRenderer`

## test-app.md → code
- Tabs: Whiteboard / Code / Notes
- Debug: Logs, Context (JSON+image), Calls
- Device selectors + test tone in `AIVoiceAgentPanel`
- Combined auto-context sender preferred; fallback noted

## troubleshooting.md → code
- Token and CORS checks match `convex/http.ts`
- Language guard path uses `session.update`
- Race mitigation: combined sender + ~120ms debounce
- tldraw geo rules and label behavior; text uses `richText` for both `text` and `geo` shapes.

## Planned vs Present
- Present in code: items listed above only
- Planned in docs (not implemented): Judge0 execution, Convex persistence for IDE/notes, `codecell` block

